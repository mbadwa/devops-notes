Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String
  InstanceTypeParameter:
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large 
  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  AMIIDMap: 
    us-east-1:
      MyAMI1: ami-01816d07b1128cd2d
      MyAMI2: ami-0e2c8caa4b6378d8c
    us-west-1:
      MyAMI1: ami-0aa117785d1c1bfe5
      MyAMI2: ami-0657605d763ac72a8
    eu-west-1:
      MyAMI1: ami-0a094c309b87cc107
      MyAMI2: ami-0e9085e60087ce171
    ap-southeast-1:
      MyAMI1: ami-0995922d49dc9a17d
      MyAMI2: ami-06650ca7ed78ff6fa
    ap-northeast-1:
      MyAMI1: ami-0ab02459752898a60
      MyAMI2: ami-0b2cd2a95639e0e5b
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AMIIDMap  
        - !Ref AWS::Region
        - MyAMI2
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG
  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http from MyIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 181.114.77.163/32  